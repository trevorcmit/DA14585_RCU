/*****************************************************************************************
 *
 * \file app_touchpad_config.h
 *
 * \brief Touchpad application configuration header file
 * 
******************************************************************************************/

#ifndef _APP_TOUCHPAD_CONFIG_H_
#define _APP_TOUCHPAD_CONFIG_H_

/*****************************************************************************************
 * \addtogroup CONFIGURATION
 * \{
 * \addtogroup MODULE_CONFIG
 * \{
 * \addtogroup TOUCHPAD_CFG
 *
 * \brief Touchpad module configuration
 * \{
******************************************************************************************/

#include "port_platform.h"
#include "port_touchpad.h"
#include <user_periph_setup.h>
#include "user_rcu_motion.h"



/*  TOUCH_PAD_MODULE defines which touch module is going to be used */
#if defined(HAS_TOUCHPAD_TRACKPAD)
#define TOUCH_PAD_MODULE        AZOTEQ_TOUCHPAD_IQS_5XX
#elif defined(HAS_TOUCHPAD_SLIDER)
#define TOUCH_PAD_MODULE        AZOTEQ_TOUCHPAD_IQS_263
#endif


/* 
    Defining TOUCHPAD_STATIC_EVENT_SETUP the touchpad will make the 
    touchpad event setup to be defined during preprocessing and NOT 
    being runtime configurable                                      
 */
#define TOUCHPAD_STATIC_EVENT_SETUP

#ifdef TOUCHPAD_STATIC_EVENT_SETUP
#define TOUCHPAD_USER_SETUP             (\
        APP_TOUCHPAD_EVT_MASK_TRACK_STARTED  | APP_TOUCHPAD_EVT_MASK_TRACKING | APP_TOUCHPAD_EVT_MASK_TRACK_STOPPED | APP_TOUCHPAD_EVT_MASK_TAP_UP | \
        APP_TOUCHPAD_EVT_MASK_TAP_DOWN  | APP_TOUCHPAD_EVT_MASK_TAP_RIGHT  | APP_TOUCHPAD_EVT_MASK_TAP_LEFT  | APP_TOUCHPAD_EVT_MASK_SINGLE_FINGER_TAP | \
        APP_TOUCHPAD_EVT_MASK_TOUCH_AND_HOLD | APP_TOUCHPAD_EVT_MASK_SWIPE_LEFT | APP_TOUCHPAD_EVT_MASK_SWIPE_RIGHT | \
        APP_TOUCHPAD_EVT_MASK_SWIPE_UP | APP_TOUCHPAD_EVT_MASK_SWIPE_DOWN | APP_TOUCHPAD_EVT_MASK_ZOOM_IN | \
        APP_TOUCHPAD_EVT_MASK_ZOOM_OUT | APP_TOUCHPAD_EVT_MASK_DOUBLE_FINGER_TAP | APP_TOUCHPAD_EVT_MASK_SCROLL_UP | \
        APP_TOUCHPAD_EVT_MASK_SCROLL_DOWN | APP_TOUCHPAD_EVT_MASK_SCROLL_RIGHT | APP_TOUCHPAD_EVT_MASK_SCROLL_LEFT | \
        APP_TOUCHPAD_EVT_MASK_FLICK_LEFT | APP_TOUCHPAD_EVT_MASK_FLICK_RIGHT | APP_TOUCHPAD_EVT_MASK_ROTATE_LEFT | APP_TOUCHPAD_EVT_MASK_ROTATE_RIGHT\
        )   
#endif



#if (TOUCH_PAD_MODULE==AZOTEQ_TOUCHPAD_IQS_263)

// In case of slide event usage/support, this setting defines the number 
// of slide events produced by the touch controller needed in order to produce a
// slide application event ( slide sensitivity )
#define APP_TOUCH_MAX_SLIDE_ACCUMULATED_EVENTS     4

// These settings apply for tap coordinates boundaries
// when using a slider module
#define APP_TOUCH_COORDS_DOWN_MIN        185    // A - B 
#define APP_TOUCH_COORDS_DOWN_MAX        10     // A - B 
#define APP_TOUCH_COORDS_RIGHT_MIN       25     // A - B 
#define APP_TOUCH_COORDS_RIGHT_MAX       52     // B - C   
#define APP_TOUCH_COORDS_UP_MIN          84     // C - D   
#define APP_TOUCH_COORDS_UP_MAX          100    // C - D 
#define APP_TOUCH_COORDS_LEFT_MIN        144    // F - A  
#define APP_TOUCH_COORDS_LEFT_MAX        164    // F - A  

#define APP_TOUCH_COORDS_MAX             192 
#endif


/*
 * Touchpad Wake-Up / Interrupt pin definitions 
 */
#define TOUCHPAD_INT_PORT           GPIO_PORT_2
#define TOUCHPAD_INT_PIN            GPIO_PIN_7

#if (TOUCH_PAD_MODULE==AZOTEQ_TOUCHPAD_IQS_5XX)
    #define TOUCHPAD_INT_POLARITY		WKUPCT_PIN_POLARITY_HIGH    // IQS5XX modules produce an interrupt by setting their RDY pin to 1
#elif (TOUCH_PAD_MODULE==AZOTEQ_TOUCHPAD_IQS_263)
    #define TOUCHPAD_INT_POLARITY		WKUPCT_PIN_POLARITY_LOW     // IQS263 produces an interrupt by setting their RDY pin to 0
#endif


enum touchpad_int_pin_ids {
    TOUCHPAD_INT_PIN_ID,
};

static const pin_type_t app_touchpad_int_pin[] = {
    [TOUCHPAD_INT_PIN_ID]  = {.port = TOUCHPAD_INT_PORT, .pin = TOUCHPAD_INT_PIN, .high = 0, .mode_function = INPUT_PULLDOWN | PID_GPIO },
};

/*
 * User callbacks that will be used to process tracking and special events 
 * generated by the touchpad module
 */
#define user_touchpad_track_eventCB				(user_touchpad_on_tracking_event)
#define user_touchpad_special_eventCB			(user_touchpad_on_special_event)

#ifndef user_touchpad_track_eventCB
#error "Undefined callback for touch TRACKING events"
#endif

#ifndef user_touchpad_special_eventCB
#error "Undefined callback for touch SPECIAL events"
#endif


static const app_touchpad_util_funcs_t app_touchpad_funcs = {
    .app_tpad_poll = port_touchpad_poll,
    .app_tpad_init = port_touchpad_init,
    .app_tpad_deinit = port_touchpad_deinit
};

/**
 * \}
 * \}
 * \}
 */

#endif // _APP_TOUCHPAD_CONFIG_H_
